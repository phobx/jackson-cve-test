package com.asd;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.Optional;
import java.util.function.Function;
import java.util.stream.IntStream;
import java.util.stream.Stream;

public class SomeEntity {

	private Optional<Integer> numberOfSomething;

	public Optional<Integer> getNumberOfSomething() {
		return numberOfSomething;
	}

	public SomeEntity(Integer number) {
		this.numberOfSomething = Optional.ofNullable(number);
	}

	public static void main(String[] args) {
		LocalDate localDate = LocalDate.of(2016, 1, 1).withDayOfMonth(31);
		LocalDate localDate2 = LocalDate.parse("2016-01-01");
		Date date = new Date(2016, 1, 1);
		System.out.println(localDate);
		System.out.println(localDate2);
		System.out.println(date);

		Function<Integer, Integer> squared = i -> i * i;
		Function<Integer, Integer> times2 = i -> i * 2;
		Function<Integer, Integer> customFunction = squared.andThen(times2);

		IntStream.range(1, 10).sum();// .collect(Collectors.toList());

		new HashSet<String>().forEach(x -> System.out.println(x));

		new ArrayList<Integer>().stream().limit(10).skip(5).distinct().peek(System.out::println).filter(i -> i > 5)
				.findAny().ifPresent(System.out::println);

		try (Stream<String> lines = Files.lines(Paths.get(""))) {
			// lines.forEach(action);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

}
